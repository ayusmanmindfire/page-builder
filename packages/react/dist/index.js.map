{"version":3,"sources":["../src/components/PageBuilder.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\r\nimport { Canvas } from '@mindfiredigital/page-builder-core/dist/canvas/Canvas.js';\r\nimport { Sidebar } from '@mindfiredigital/page-builder-core/dist/sidebar/ConfigSidebar.js';\r\nimport { CustomizationSidebar } from '@mindfiredigital/page-builder-core/dist/sidebar/CustomizationSidebar.js';\r\nimport { createSidebar } from '@mindfiredigital/page-builder-core/dist/sidebar/CreateSidebar.js';\r\nimport { createNavbar } from '@mindfiredigital/page-builder-core/dist/navbar/CreateNavbar.js';\r\nimport { HTMLGenerator } from '@mindfiredigital/page-builder-core/dist/services/HTMLGenerator.js';\r\nimport { JSONStorage } from '@mindfiredigital/page-builder-core/dist/services/JSONStorage.js';\r\nimport { ShortcutManager } from '@mindfiredigital/page-builder-core/dist/services/ShortcutManager.js';\r\nimport { PreviewPanel } from '@mindfiredigital/page-builder-core/dist/canvas/PreviewPanel.js';\r\nimport {\r\n  showDialogBox,\r\n  showNotification,\r\n} from '@mindfiredigital/page-builder-core/dist/utils/utilityFunctions.js';\r\nimport { createZipFile } from '@mindfiredigital/page-builder-core/dist/utils/zipGenerator.js';\r\nimport '@mindfiredigital/page-builder-core/dist/styles/main.css';\r\n\r\nexport interface PageBuilderProps {\r\n  className?: string;\r\n  initialContent?: string;\r\n  onSave?: (layoutJSON: any) => void;\r\n  onReset?: () => void;\r\n  onExport?: (html: string, css: string) => void;\r\n  onStateChange?: (state: any) => void;\r\n  onError?: (error: Error) => void;\r\n}\r\n\r\nexport const PageBuilder: React.FC<PageBuilderProps> = ({\r\n  className,\r\n  initialContent,\r\n  onSave,\r\n  onReset,\r\n  onExport,\r\n  onStateChange,\r\n  onError\r\n}) => {\r\n  // Refs for core instances\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<Canvas | null>(null);\r\n  const sidebarRef = useRef<Sidebar | null>(null);\r\n  const previewPanelRef = useRef<PreviewPanel | null>(null);\r\n  const htmlGeneratorRef = useRef<HTMLGenerator | null>(null);\r\n  const jsonStorageRef = useRef<JSONStorage | null>(null);\r\n\r\n  // Initialize the page builder\r\n  useEffect(() => {\r\n    try {\r\n      if (!containerRef.current) return;\r\n\r\n      // Initialize core components\r\n      canvasRef.current = new Canvas();\r\n      const canvas = canvasRef.current;\r\n      \r\n      sidebarRef.current = new Sidebar(canvas);\r\n      previewPanelRef.current = new PreviewPanel();\r\n      htmlGeneratorRef.current = new HTMLGenerator(canvas);\r\n      jsonStorageRef.current = new JSONStorage();\r\n\r\n      // Initialize required elements\r\n      createSidebar();\r\n      Canvas.init();\r\n      sidebarRef.current.init();\r\n      ShortcutManager.init();\r\n      CustomizationSidebar.init();\r\n\r\n      // Create and append navbar\r\n      const header = document.createElement('header');\r\n      header.appendChild(createNavbar());\r\n      containerRef.current.insertBefore(header, containerRef.current.firstChild);\r\n\r\n      // Set initial content if provided\r\n      if (initialContent) {\r\n        jsonStorageRef.current.save(JSON.parse(initialContent));\r\n      }\r\n\r\n      // Set up state change listener\r\n      // if (onStateChange) {\r\n      //   // eslint-disable-next-line no-unused-vars\r\n      //   const stateObserver = () => {\r\n      //     const state = Canvas.getState();\r\n      //     onStateChange(state);\r\n      //   };\r\n      //   // Add your state change listener here\r\n      //   // You might need to modify your core to support this\r\n      // }\r\n\r\n    } catch (error) {\r\n      onError?.(error as Error);\r\n    }\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      try {\r\n        // ShortcutManager.destroy?.();\r\n        canvasRef.current = null;\r\n        sidebarRef.current = null;\r\n        previewPanelRef.current = null;\r\n        htmlGeneratorRef.current = null;\r\n        jsonStorageRef.current = null;\r\n      } catch (error) {\r\n        onError?.(error as Error);\r\n      }\r\n    };\r\n  }, [initialContent, onStateChange, onError]);\r\n\r\n  // Save handler\r\n  const handleSave = useCallback(() => {\r\n    try {\r\n      const layoutJSON = Canvas.getState();\r\n      jsonStorageRef.current?.save(layoutJSON);\r\n      showNotification('Saving progress...');\r\n      onSave?.(layoutJSON);\r\n    } catch (error) {\r\n      onError?.(error as Error);\r\n    }\r\n  }, [onSave, onError]);\r\n\r\n  // Reset handler\r\n  const handleReset = useCallback(() => {\r\n    showDialogBox(\r\n      'Are you sure you want to reset the layout?',\r\n      () => {\r\n        try {\r\n          jsonStorageRef.current?.remove();\r\n          Canvas.clearCanvas();\r\n          showNotification('The saved layout has been successfully reset.');\r\n          onReset?.();\r\n        } catch (error) {\r\n          onError?.(error as Error);\r\n        }\r\n      },\r\n      () => {\r\n        console.log('Layout reset canceled.');\r\n      }\r\n    );\r\n  }, [onReset, onError]);\r\n\r\n  // Export handler\r\n  const handleExport = useCallback(() => {\r\n    try {\r\n      if (!htmlGeneratorRef.current) return;\r\n\r\n      const html = htmlGeneratorRef.current.generateHTML();\r\n      const css = htmlGeneratorRef.current.generateCSS();\r\n\r\n      const zipFile = createZipFile([\r\n        { name: 'index.html', content: html },\r\n        { name: 'styles.css', content: css }\r\n      ]);\r\n\r\n      // Create download link\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(zipFile);\r\n      link.download = 'exported-files.zip';\r\n      link.click();\r\n      URL.revokeObjectURL(link.href);\r\n\r\n      onExport?.(html, css);\r\n    } catch (error) {\r\n      onError?.(error as Error);\r\n    }\r\n  }, [onExport, onError]);\r\n\r\n  // Preview mode handlers\r\n  const setPreviewMode = useCallback((mode: 'desktop' | 'tablet' | 'mobile') => {\r\n    try {\r\n      previewPanelRef.current?.setPreviewMode(mode);\r\n    } catch (error) {\r\n      onError?.(error as Error);\r\n    }\r\n  }, [onError]);\r\n\r\n  // History handlers\r\n  const handleUndo = useCallback(() => {\r\n    try {\r\n      Canvas.historyManager.undo();\r\n    } catch (error) {\r\n      onError?.(error as Error);\r\n    }\r\n  }, [onError]);\r\n\r\n  const handleRedo = useCallback(() => {\r\n    try {\r\n      Canvas.historyManager.redo();\r\n    } catch (error) {\r\n      onError?.(error as Error);\r\n    }\r\n  }, [onError]);\r\n\r\n  return (\r\n    <div className={`page-builder-wrapper ${className || ''}`} ref={containerRef}>\r\n      <div className=\"page-builder-toolbar\">\r\n        <button onClick={handleSave} id=\"save-btn\">Save</button>\r\n        <button onClick={handleReset} id=\"reset-btn\">Reset</button>\r\n        <button onClick={handleExport} id=\"export-html-btn\">Export</button>\r\n        <div className=\"history-controls\">\r\n          <button onClick={handleUndo} id=\"undo-btn\">Undo</button>\r\n          <button onClick={handleRedo} id=\"redo-btn\">Redo</button>\r\n        </div>\r\n        <div className=\"preview-controls\">\r\n          <button onClick={() => setPreviewMode('desktop')} id=\"preview-desktop\">Desktop</button>\r\n          <button onClick={() => setPreviewMode('tablet')} id=\"preview-tablet\">Tablet</button>\r\n          <button onClick={() => setPreviewMode('mobile')} id=\"preview-mobile\">Mobile</button>\r\n        </div>\r\n      </div>\r\n      <div id=\"app\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageBuilder;"]}