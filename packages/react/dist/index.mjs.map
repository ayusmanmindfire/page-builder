{"version":3,"sources":["../src/components/PageBuilder.tsx"],"sourcesContent":["import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\n// Interfaces\r\ninterface DynamicComponents {\r\n  Basic: string[];\r\n  Extra: string[];\r\n  Custom?: Record<string, CustomComponentConfig>;\r\n}\r\n\r\ninterface CustomComponentConfig {\r\n  component: React.ComponentType<any> | string;\r\n  svg?: string;\r\n  title?: string;\r\n}\r\n\r\nexport interface PageBuilderApi {\r\n  getApi: () => any;\r\n}\r\n\r\ninterface PageBuilderReactProps {\r\n  config: DynamicComponents;\r\n  customComponents?: Record<string, CustomComponentConfig>;\r\n}\r\n\r\nexport const PageBuilderReact = forwardRef<PageBuilderApi, PageBuilderReactProps>(\r\n  ({ config, customComponents }, ref) => {\r\n    const builderRef = useRef<HTMLElement>(null);\r\n    const [processedConfig, setProcessedConfig] = useState<DynamicComponents>(config);\r\n\r\n    // Load web component\r\n    useEffect(() => {\r\n      import(\"@mindfiredigital/page-builder-web-component\").catch((error) => {\r\n        console.error(\"Failed to load web component:\", error);\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const modifiedConfig: DynamicComponents | any = JSON.parse(\r\n        JSON.stringify(config)\r\n      );\r\n\r\n      if (customComponents) {\r\n        modifiedConfig.Custom = modifiedConfig.Custom || {};\r\n\r\n        Object.entries(customComponents).forEach(([key, componentConfig]) => {\r\n          if (!componentConfig.component) {\r\n            console.warn(`Skipping invalid component: ${key}`);\r\n            return;\r\n          }\r\n\r\n          const tagName = `react-component-${key.toLowerCase()}`;\r\n\r\n          if (!customElements.get(tagName)) {\r\n            class ReactComponentElement extends HTMLElement {\r\n              connectedCallback() {\r\n                const mountPoint = document.createElement(\"div\");\r\n                this.appendChild(mountPoint);\r\n\r\n                try {\r\n                  ReactDOM.createRoot(mountPoint).render(\r\n                    React.createElement(componentConfig.component)\r\n                  );\r\n                } catch (error) {\r\n                  console.error(`Error rendering ${key} component:`, error);\r\n                }\r\n              }\r\n            }\r\n\r\n            customElements.define(tagName, ReactComponentElement);\r\n          }\r\n\r\n          modifiedConfig.Custom[key] = {\r\n            component: tagName,\r\n            svg: componentConfig.svg,\r\n            title: componentConfig.title,\r\n          };\r\n        });\r\n      }\r\n\r\n      setProcessedConfig(modifiedConfig);\r\n    }, [config, customComponents]);\r\n\r\n    // Set config-data on builder element\r\n    useEffect(() => {\r\n      if (builderRef.current) {\r\n        try {\r\n          const configString = JSON.stringify(processedConfig);\r\n          builderRef.current.setAttribute(\"config-data\", configString);\r\n        } catch (error) {\r\n          console.error(\"Error setting config-data:\", error);\r\n        }\r\n      }\r\n    }, [processedConfig]);\r\n\r\n    // Expose API to parent via ref\r\n    useImperativeHandle(ref, () => ({\r\n      getApi: () => {\r\n        const builder = builderRef.current as any;\r\n        if (builder?.getApi) {\r\n          return builder.getApi();\r\n        } else {\r\n          console.warn(\"PageBuilder API not ready yet\");\r\n          return null;\r\n        }\r\n      },\r\n    }));\r\n\r\n    return <page-builder ref={builderRef} />;\r\n  }\r\n);\r\n"],"mappings":";AAAA,OAAO;AAAA,EACL;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,OAAO,cAAc;AAwBd,IAAM,mBAAmB;AAAA,EAC9B,CAAC,EAAE,QAAQ,iBAAiB,GAAG,QAAQ;AACrC,UAAM,aAAa,OAAoB,IAAI;AAC3C,UAAM,CAAC,iBAAiB,kBAAkB,IAAI,SAA4B,MAAM;AAGhF,cAAU,MAAM;AACd,aAAO,6CAA6C,EAAE,MAAM,CAAC,UAAU;AACrE,gBAAQ,MAAM,iCAAiC,KAAK;AAAA,MACtD,CAAC;AAAA,IACH,GAAG,CAAC,CAAC;AAEL,cAAU,MAAM;AACd,YAAM,iBAA0C,KAAK;AAAA,QACnD,KAAK,UAAU,MAAM;AAAA,MACvB;AAEA,UAAI,kBAAkB;AACpB,uBAAe,SAAS,eAAe,UAAU,CAAC;AAElD,eAAO,QAAQ,gBAAgB,EAAE,QAAQ,CAAC,CAAC,KAAK,eAAe,MAAM;AACnE,cAAI,CAAC,gBAAgB,WAAW;AAC9B,oBAAQ,KAAK,+BAA+B,KAAK;AACjD;AAAA,UACF;AAEA,gBAAM,UAAU,mBAAmB,IAAI,YAAY;AAEnD,cAAI,CAAC,eAAe,IAAI,OAAO,GAAG;AAChC,kBAAM,8BAA8B,YAAY;AAAA,cAC9C,oBAAoB;AAClB,sBAAM,aAAa,SAAS,cAAc,KAAK;AAC/C,qBAAK,YAAY,UAAU;AAE3B,oBAAI;AACF,2BAAS,WAAW,UAAU,EAAE;AAAA,oBAC9B,MAAM,cAAc,gBAAgB,SAAS;AAAA,kBAC/C;AAAA,gBACF,SAAS,OAAP;AACA,0BAAQ,MAAM,mBAAmB,kBAAkB,KAAK;AAAA,gBAC1D;AAAA,cACF;AAAA,YACF;AAEA,2BAAe,OAAO,SAAS,qBAAqB;AAAA,UACtD;AAEA,yBAAe,OAAO,GAAG,IAAI;AAAA,YAC3B,WAAW;AAAA,YACX,KAAK,gBAAgB;AAAA,YACrB,OAAO,gBAAgB;AAAA,UACzB;AAAA,QACF,CAAC;AAAA,MACH;AAEA,yBAAmB,cAAc;AAAA,IACnC,GAAG,CAAC,QAAQ,gBAAgB,CAAC;AAG7B,cAAU,MAAM;AACd,UAAI,WAAW,SAAS;AACtB,YAAI;AACF,gBAAM,eAAe,KAAK,UAAU,eAAe;AACnD,qBAAW,QAAQ,aAAa,eAAe,YAAY;AAAA,QAC7D,SAAS,OAAP;AACA,kBAAQ,MAAM,8BAA8B,KAAK;AAAA,QACnD;AAAA,MACF;AAAA,IACF,GAAG,CAAC,eAAe,CAAC;AAGpB,wBAAoB,KAAK,OAAO;AAAA,MAC9B,QAAQ,MAAM;AACZ,cAAM,UAAU,WAAW;AAC3B,YAAI,mCAAS,QAAQ;AACnB,iBAAO,QAAQ,OAAO;AAAA,QACxB,OAAO;AACL,kBAAQ,KAAK,+BAA+B;AAC5C,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF,EAAE;AAEF,WAAO,oCAAC,kBAAa,KAAK,YAAY;AAAA,EACxC;AACF;","names":[]}